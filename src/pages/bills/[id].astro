---
import BaseLayout from '../../layouts/BaseLayout.astro';
import Header from '../../components/layout/Header.astro';
import Footer from '../../components/layout/Footer.astro';
import { SITE } from '../../constants/site';
import { IMPACT_CATEGORIES, getImpactName, type ImpactKey } from '../../constants/impacts';
import { getAllBills } from '../../utils/bills';

// Generate static paths for all bills from JSON files
export async function getStaticPaths() {
  const bills = await getAllBills();

  return bills.map((bill) => ({
    params: { id: bill.id },
    props: { bill },
  }));
}

const { bill } = Astro.props;

// Helper function for impact badge styling
const getImpactBadgeClass = (score: string) => {
  switch (score) {
    case 'high-negative':
      return 'bg-red-100 text-red-700 border-red-200';
    case 'medium-negative':
      return 'bg-orange-100 text-orange-700 border-orange-200';
    case 'low-negative':
      return 'bg-yellow-100 text-yellow-700 border-yellow-200';
    case 'neutral':
      return 'bg-gray-100 text-gray-700 border-gray-200';
    case 'low-positive':
      return 'bg-blue-100 text-blue-700 border-blue-200';
    case 'medium-positive':
      return 'bg-green-100 text-green-700 border-green-200';
    case 'high-positive':
      return 'bg-emerald-100 text-emerald-700 border-emerald-200';
    default:
      return 'bg-gray-100 text-gray-700 border-gray-200';
  }
};

const getImpactLabel = (score: string) => {
  switch (score) {
    case 'high-negative':
      return 'High Negative Impact';
    case 'medium-negative':
      return 'Medium Negative Impact';
    case 'low-negative':
      return 'Low Negative Impact';
    case 'neutral':
      return 'Neutral Impact';
    case 'low-positive':
      return 'Low Positive Impact';
    case 'medium-positive':
      return 'Medium Positive Impact';
    case 'high-positive':
      return 'High Positive Impact';
    default:
      return 'Unknown Impact';
  }
};

// Helper to get provision details
const getProvisionLabel = (provisionId: string) => {
  const provision = bill.provisions?.find(p => p.id === provisionId);
  return provision ? `${provision.section}: ${provision.title}` : provisionId;
};

// Helper function for severity badge styling
const getSeverityConfig = (severity: string) => {
  switch (severity) {
    case 'critical':
      return {
        icon: 'alert-triangle',
        bgColor: 'bg-red-50',
        borderColor: 'border-red-200',
        iconBgColor: 'bg-red-100',
        iconTextColor: 'text-red-600',
        badgeClass: 'bg-red-100 text-red-700 border-red-200',
        label: 'Critical',
      };
    case 'high':
      return {
        icon: 'alert-circle',
        bgColor: 'bg-orange-50',
        borderColor: 'border-orange-200',
        iconBgColor: 'bg-orange-100',
        iconTextColor: 'text-orange-600',
        badgeClass: 'bg-orange-100 text-orange-700 border-orange-200',
        label: 'High',
      };
    case 'medium':
      return {
        icon: 'info-circle',
        bgColor: 'bg-yellow-50',
        borderColor: 'border-yellow-200',
        iconBgColor: 'bg-yellow-100',
        iconTextColor: 'text-yellow-600',
        badgeClass: 'bg-yellow-100 text-yellow-700 border-yellow-200',
        label: 'Medium',
      };
    default:
      return {
        icon: 'alert-circle',
        bgColor: 'bg-gray-50',
        borderColor: 'border-gray-200',
        iconBgColor: 'bg-gray-100',
        iconTextColor: 'text-gray-600',
        badgeClass: 'bg-gray-100 text-gray-700 border-gray-200',
        label: severity,
      };
  }
};

// Filter impacts to only show those that have data
const impactsToDisplay = Object.entries(bill.impacts || {}).filter(([key, impact]) => impact && impact.description);
---

<BaseLayout
  title={`${bill.title} - ${SITE.name}`}
  description={bill.summary}
>
  <Header />

  <main id="main-content" class="flex-1 text-gray-900">
    <!-- Bill Header -->
    <section class="bg-gradient-to-b from-white to-gray-50 py-12 md:py-16 border-b border-gray-200">
      <div class="container">
        <div class="max-w-6xl mx-auto">
          <!-- Breadcrumbs -->
          <nav class="flex items-center gap-2 text-sm text-gray-600 mb-6">
            <a href="/" class="hover:text-[var(--color-primary)] transition-colors">Home</a>
            <i class="ti ti-chevron-right text-gray-400"></i>
            <a href="/bills" class="hover:text-[var(--color-primary)] transition-colors">Bills</a>
            <i class="ti ti-chevron-right text-gray-400"></i>
            <span class="text-gray-900 font-medium">{bill.title}</span>
          </nav>

          <!-- Title -->
          <h1 class="text-4xl md:text-5xl font-bold text-black mb-4 leading-tight">
            {bill.title}
          </h1>

          <!-- Status Badges -->
          <div class="flex flex-wrap items-center gap-2 mb-6">
            <span class="px-3 py-1 bg-red-100 text-red-700 text-xs font-semibold rounded-full uppercase">
              Urgent
            </span>
            <span class="px-3 py-1 bg-blue-100 text-blue-700 text-xs font-semibold rounded-full capitalize">
              {bill.status}
            </span>
            {bill.categories.map((category) => (
              <span class="px-3 py-1 bg-gray-100 text-gray-700 text-xs font-semibold rounded-full">
                {category}
              </span>
            ))}
          </div>

          <!-- Action Buttons -->
          <div class="flex flex-wrap gap-4">
            <a
              href="#take-action"
              class="inline-flex items-center gap-2 px-6 py-3 bg-[var(--color-primary)] text-white font-semibold rounded-lg hover:bg-[#1E5A5A] transition-colors"
            >
              <i class="ti ti-speakerphone"></i>
              Take Action Now
            </a>
            <button class="inline-flex items-center gap-2 px-6 py-3 bg-white text-gray-700 border-2 border-gray-200 font-semibold rounded-lg hover:border-[var(--color-primary)] hover:text-[var(--color-primary)] transition-colors">
              <i class="ti ti-download"></i>
              Download PDF
            </button>
            <button class="inline-flex items-center gap-2 px-6 py-3 bg-white text-gray-700 border-2 border-gray-200 font-semibold rounded-lg hover:border-[var(--color-primary)] hover:text-[var(--color-primary)] transition-colors">
              <i class="ti ti-share"></i>
              Share
            </button>
          </div>
        </div>
      </div>
    </section>

    <div class="container">
      <div class="max-w-6xl mx-auto py-12 md:py-16">
        <!-- Main Content -->
        <div class="space-y-12">
            <!-- NotebookLM Video -->
            <section>
              <h2 class="text-3xl font-bold text-black mb-4 flex items-center gap-3">
                <i class="ti ti-video text-[var(--color-primary)]"></i>
                Listen: AI-Powered Analysis
              </h2>
              <div class="bg-white border-2 border-gray-200 rounded-xl p-6">
                <div class="aspect-video bg-gray-100 rounded-lg flex items-center justify-center mb-4">
                  <div class="text-center text-gray-500">
                    <i class="ti ti-player-play text-6xl mb-4"></i>
                    <p class="text-lg font-medium">NotebookLM Audio Overview</p>
                    <p class="text-sm">Duration: {bill.notebookLMVideo.duration}</p>
                  </div>
                </div>
                <p class="text-sm text-gray-600">
                  Listen to an AI-generated discussion breaking down this bill in plain language, exploring its key provisions and potential impacts on Ghana's digital innovation sector.
                </p>
              </div>
            </section>

            <!-- Executive Summary -->
            <section>
              <h2 class="text-3xl font-bold text-black mb-4 flex items-center gap-3">
                <i class="ti ti-file-text text-[var(--color-primary)]"></i>
                Executive Summary
              </h2>
              <div class="bg-white border-2 border-gray-200 rounded-xl p-6">
                <p class="text-lg text-gray-900 font-medium leading-relaxed">
                  {bill.summary}
                </p>
              </div>
            </section>

            <!-- Impact Analysis -->
            <section id="impact-analysis">
              <h2 class="text-3xl font-bold text-black mb-4 flex items-center gap-3">
                <i class="ti ti-chart-line text-[var(--color-primary)]"></i>
                Impact Analysis
              </h2>
              <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                {impactsToDisplay.map(([impactKey, impact]) => {
                  const category = IMPACT_CATEGORIES[impactKey as ImpactKey];
                  if (!category) return null;

                  return (
                    <div id={`impact-${impactKey}`} class="bg-white border-2 border-gray-200 rounded-xl p-6 hover:border-[var(--color-primary)] transition-colors scroll-mt-24">
                      <div class="flex items-start gap-4 mb-4">
                        <div class={`flex-shrink-0 w-12 h-12 ${category.bgColor} rounded-lg flex items-center justify-center`}>
                          <i class={`ti ti-${category.icon} text-2xl ${category.iconColorClass}`}></i>
                        </div>
                        <div class="flex-1">
                          <h3 class="text-xl font-bold text-black mb-2">{category.name}</h3>
                          <span class={`inline-block px-3 py-1 text-xs font-semibold rounded-full border ${getImpactBadgeClass(impact.score)}`}>
                            {getImpactLabel(impact.score)}
                          </span>
                        </div>
                      </div>
                      <p class="text-gray-900 leading-relaxed mb-4">
                        {impact.description}
                      </p>
                      {impact.relatedProvisions && impact.relatedProvisions.length > 0 && (
                        <div class="pt-3 border-t border-gray-200">
                          <span class="text-sm font-semibold text-gray-600 block mb-2">Related Provisions:</span>
                          <div class="flex flex-wrap gap-2">
                            {impact.relatedProvisions.map((provisionId) => (
                              <a
                                href={`#${provisionId}`}
                                class="inline-flex items-center gap-2 text-sm px-3 py-2 bg-gray-100 text-[var(--color-primary)] rounded hover:bg-[var(--color-primary)] hover:text-white transition-colors"
                              >
                                <i class="ti ti-arrow-right text-xs"></i>
                                <span>{getProvisionLabel(provisionId)}</span>
                              </a>
                            ))}
                          </div>
                        </div>
                      )}
                    </div>
                  );
                })}
              </div>
            </section>

            <!-- Key Concerns - Prominent Alert Box -->
            {bill.keyConcerns && bill.keyConcerns.length > 0 && (
              <section id="key-concerns" class="scroll-mt-24">
                <div class="bg-gradient-to-br from-red-50 to-orange-50 border-2 border-red-200 rounded-xl p-8">
                  <div class="flex items-start gap-4 mb-6">
                    <div class="flex-shrink-0 w-16 h-16 bg-red-100 rounded-xl flex items-center justify-center">
                      <i class="ti ti-alert-triangle text-4xl text-red-600"></i>
                    </div>
                    <div>
                      <h2 class="text-3xl font-bold text-black mb-2">Critical Issues with This Bill</h2>
                      <p class="text-lg text-gray-800">
                        These concerns pose significant risks to Ghana's digital innovation ecosystem
                      </p>
                    </div>
                  </div>

                  <div class="overflow-x-auto -mx-8 px-8">
                    <div class="flex items-stretch gap-4 pb-4" style="min-width: min-content;">
                      {bill.keyConcerns.map((concern, index) => {
                        const severityConfig = getSeverityConfig(concern.severity);
                        return (
                          <div id={concern.id} class="bg-white border-2 border-red-200 rounded-lg p-5 scroll-mt-24 hover:border-red-400 transition-colors flex-shrink-0 w-[340px] flex flex-col">
                            <div class="flex items-center gap-3 mb-3">
                              <div class="flex-shrink-0 w-8 h-8 bg-red-100 rounded-lg flex items-center justify-center">
                                <span class="text-lg font-bold text-red-600">{index + 1}</span>
                              </div>
                              <span class={`px-2 py-1 text-xs font-semibold rounded border ${severityConfig.badgeClass}`}>
                                {severityConfig.label}
                              </span>
                            </div>

                            <h3 class="text-lg font-bold text-black mb-3 leading-tight h-14 flex items-center">{concern.title}</h3>

                            <p class="text-sm text-gray-700 leading-relaxed mb-4 flex-1">
                              {concern.description}
                            </p>

                            <div class="pt-3 border-t border-gray-200 space-y-2 mt-auto">
                              {concern.relatedProvisions && concern.relatedProvisions.length > 0 && (
                                <div>
                                  <span class="text-xs font-semibold text-gray-500 block mb-1">See Details:</span>
                                  <div class="flex flex-wrap gap-1">
                                    {concern.relatedProvisions.map((provisionId) => (
                                      <a
                                        href={`#${provisionId}`}
                                        class="inline-flex items-center gap-1 text-xs px-2 py-1 bg-gray-100 text-gray-700 rounded hover:bg-[var(--color-primary)] hover:text-white transition-colors"
                                      >
                                        <i class="ti ti-arrow-down"></i>
                                        <span>{bill.provisions?.find(p => p.id === provisionId)?.section || provisionId}</span>
                                      </a>
                                    ))}
                                  </div>
                                </div>
                              )}
                            </div>
                          </div>
                        );
                      })}
                    </div>
                  </div>
                </div>
              </section>
            )}

            <!-- Key Provisions -->
            <section id="key-provisions">
              <div class="flex items-center justify-between mb-4">
                <h2 class="text-3xl font-bold text-black flex items-center gap-3">
                  <i class="ti ti-list-details text-[var(--color-primary)]"></i>
                  Key Provisions
                </h2>
              </div>
              <div class="bg-white border-2 border-gray-200 rounded-xl divide-y divide-gray-200">
                {bill.provisions?.map((provision) => (
                  <details class="group scroll-mt-24" id={provision.id}>
                    <summary class="flex items-center justify-between p-6 cursor-pointer hover:bg-gray-50 transition-colors">
                      <div class="flex items-center gap-3">
                        <i class="ti ti-file-text text-[var(--color-primary)]"></i>
                        <span class="text-lg font-semibold text-black">{provision.section}: {provision.title}</span>
                      </div>
                      <i class="ti ti-chevron-down text-gray-400 group-open:rotate-180 transition-transform flex-shrink-0"></i>
                    </summary>
                    <div class="px-6 pt-2 pb-6 space-y-4">
                      {/* Impact badges */}
                      {provision.relatedImpacts && provision.relatedImpacts.length > 0 && (
                        <div class="bg-gray-50 rounded-lg px-4 py-2">
                          <div class="flex flex-wrap items-center gap-2">
                            <span class="text-xs font-semibold text-gray-600">This provision affects:</span>
                            {provision.relatedImpacts.map((impactKey) => (
                              <a
                                href={`#impact-${impactKey}`}
                                class="inline-flex items-center gap-2 text-xs px-3 py-1.5 bg-white text-gray-700 rounded hover:bg-[var(--color-primary)] hover:text-white transition-colors"
                              >
                                <span>{getImpactName(impactKey)}</span>
                                <i class="ti ti-arrow-up text-xs"></i>
                              </a>
                            ))}
                          </div>
                        </div>
                      )}

                      {/* Plain language explanation */}
                      <div>
                        <h4 class="text-sm font-semibold text-gray-600 mb-2">Plain Language Summary</h4>
                        <p class="text-gray-900 leading-relaxed">
                          {provision.plainLanguage}
                        </p>
                      </div>

                      {/* Raw text with toggle */}
                      <details class="border-2 border-gray-200 rounded-lg overflow-hidden">
                        <summary class="px-4 py-3 cursor-pointer hover:bg-gray-50 transition-colors flex items-center gap-2 bg-white">
                          <i class="ti ti-file-text text-gray-600"></i>
                          <span class="text-sm font-semibold text-gray-700">Show Original Legal Text</span>
                        </summary>
                        <div class="px-4 py-4 bg-gray-50 border-t-2 border-gray-200">
                          <p class="text-sm text-gray-700 leading-relaxed italic border-l-4 border-[var(--color-primary)] pl-4 py-2">
                            {provision.rawText}
                          </p>
                        </div>
                      </details>
                    </div>
                  </details>
                ))}
              </div>
            </section>

            <!-- Take Action -->
            <section id="take-action">
              <h2 class="text-3xl font-bold text-black mb-4 flex items-center gap-3">
                <i class="ti ti-speakerphone text-[var(--color-primary)]"></i>
                Take Action
              </h2>
              <div class="bg-gradient-to-br from-[var(--color-primary)] to-[#1E5A5A] text-white rounded-xl p-8">
                <div class="mb-6">
                  <h3 class="text-2xl font-bold text-white mb-2">Your Voice Matters</h3>
                  <p class="text-lg opacity-95">
                    Parliament is accepting public submissions until <strong>{new Date(bill.deadline).toLocaleDateString('en-GB', { day: 'numeric', month: 'long', year: 'numeric' })}</strong>
                  </p>
                </div>

                <div class="bg-white/10 backdrop-blur-sm rounded-lg p-6 mb-6">
                  <h4 class="text-lg font-semibold text-white mb-3 flex items-center gap-2">
                    <i class="ti ti-checklist"></i>
                    How to Submit Your Comments
                  </h4>
                  <ol class="list-decimal list-inside space-y-2 text-white/95">
                    <li>Read the bill analysis above to understand the impacts</li>
                    <li>Use our template below or write your own submission</li>
                    <li>Submit via: {bill.submissionMethod}</li>
                    <li>Share this page to amplify awareness</li>
                  </ol>
                </div>

                <div class="flex flex-wrap gap-4">
                  <button class="inline-flex items-center gap-2 px-6 py-3 bg-white text-[var(--color-primary)] font-semibold rounded-lg hover:bg-gray-100 transition-colors">
                    <i class="ti ti-template"></i>
                    Use Submission Template
                  </button>
                  <a
                    href="/find-mp"
                    class="inline-flex items-center gap-2 px-6 py-3 bg-white/20 backdrop-blur-sm text-white border-2 border-white font-semibold rounded-lg hover:bg-white/30 transition-colors"
                  >
                    <i class="ti ti-user-search"></i>
                    Find Your MP
                  </a>
                </div>
              </div>
            </section>

            <!-- Related Bills -->
            {bill.relatedBills.length > 0 && (
              <section>
                <h2 class="text-3xl font-bold text-black mb-4 flex items-center gap-3">
                  <i class="ti ti-network text-[var(--color-primary)]"></i>
                  Related Bills
                </h2>
                <div class="space-y-4">
                  {bill.relatedBills.map((relatedBill) => (
                    <a
                      href={`/bills/${relatedBill.id}`}
                      class="block bg-white border-2 border-gray-200 rounded-xl p-6 hover:border-[var(--color-primary)] hover:shadow-lg transition-all duration-300"
                    >
                      <div class="flex items-start justify-between gap-4">
                        <div>
                          <h3 class="text-xl font-bold text-black mb-2 hover:text-[var(--color-primary)] transition-colors">
                            {relatedBill.title}
                          </h3>
                          <p class="text-sm text-gray-600 flex items-center gap-2">
                            <i class="ti ti-link text-[var(--color-primary)]"></i>
                            {relatedBill.relationship}
                          </p>
                        </div>
                        <i class="ti ti-arrow-right text-gray-400 flex-shrink-0"></i>
                      </div>
                    </a>
                  ))}
                </div>
              </section>
            )}
        </div>
      </div>
    </div>
  </main>

  <Footer />
</BaseLayout>

<style>
  details summary::-webkit-details-marker {
    display: none;
  }
</style>
